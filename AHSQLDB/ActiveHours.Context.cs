//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AHSQLDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.EntityClient;
    using System.Data.Entity.Infrastructure;
    using System.Data.SqlClient;

    public partial class activehoursEntities : DbContext
    {
        static string getConnectionString()
        {
            ////  < add name = "activehoursEntities" 
            ////connectionString = "metadata=res://*/ActiveHours.csdl|res://*/ActiveHours.ssdl|res://*/ActiveHours.msl
            ////; provider=System.Data.SqlClient
            ////; provider connection string=&quot
            //; data source=CAROASUSLT\SQLEXPRESSHAKEL
            //; initial catalog=activehours
            ////; integrated security=True
            //; MultipleActiveResultSets=True
            //; App=EntityFramework&quot
            //; " providerName = "System.Data.EntityClient" />

            string connectionString = "";


            // Specify the provider name, server and database.
            string providerName = "System.Data.SqlClient";
            string serverName = @"CAROASUSLT\SQLEXPRESSHAKEL";
            string databaseName = "activehours";

            // Initialize the connection string builder for the
            // underlying provider.
            SqlConnectionStringBuilder sqlBuilder =
                new SqlConnectionStringBuilder();

            // Set the properties for the data source.
            sqlBuilder.DataSource = serverName;
            sqlBuilder.InitialCatalog = databaseName;
            sqlBuilder.IntegratedSecurity = true;

            // Build the SqlConnection connection string.
            string providerString = sqlBuilder.ToString();

            // Initialize the EntityConnectionStringBuilder.
            EntityConnectionStringBuilder entityBuilder =
                new EntityConnectionStringBuilder();

            //Set the provider name.
            entityBuilder.Provider = providerName;

            // Set the provider-specific connection string.
            entityBuilder.ProviderConnectionString = providerString;

            // Set the Metadata location.
            entityBuilder.Metadata = @"res://*/ActiveHours.csdl|res://*/ActiveHours.ssdl|res://*/ActiveHours.msl";
            //Console.WriteLine(entityBuilder.ToString());

            connectionString = entityBuilder.ToString();
            return connectionString;

        }
        public activehoursEntities()
            : base(getConnectionString())
        {
        }

        //TODO - hacking around with connection string here
        ////public activehoursEntities()
        ////    : base("name=activehoursEntities")
        ////{
        ////}

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<customer> customers { get; set; }
        public virtual DbSet<customer_accounts> customer_accounts { get; set; }
    }
}
